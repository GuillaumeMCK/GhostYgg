name: Release

on:
  push:
    tags:
      - 'v[1-9]+.[0-9]+.[0-9]+'
    branches:
      - main

jobs:
  build:
    name: Linux & Windows Build
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    timeout-minutes: 45

    steps:
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '^1.20'

      - name: Install OS Packages
        run: |
          sudo apt-get update --fix-missing && sudo apt-get -y install \
          git build-essential zlib1g zlib1g-dev wget zip unzip \
          mingw-w64 binutils-mingw-w64 g++-mingw-w64 gcc-multilib \
          libgtk-3-dev libgtk-3-0 libgtk-3-bin libgtk-3-common 

      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Fetch Tags
        run: git fetch --prune --unshallow --tags -f

      - name: Run go-assets.sh
        run: ./go-assets.sh

      - name: Build Linux
        run: go build -o GhostYgg_linux ./builds

      - name: Build Windows
        run: GOOS=windows go build -o GhostYgg_windows.exe ./builds

      - name: Upload Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: artifacts
          path: |
            ./GhostYgg_linux
            ./GhostYgg_windows.exe

  macos-build:
    name: MacOS Build
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: macos-latest
    timeout-minutes: 45

    steps:
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: '^1.20'

      - name: Install Mingw
        run: brew install mingw-w64

      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Fetch Tags
        run: git fetch --prune --unshallow --tags -f

      - name: Build MacOS AMD64
        run: GOOS=darwin GOARCH=amd64 go build -o GhostYgg_macos ./builds

      - name: Build MacOS ARM64
        run: GOOS=darwin GOARCH=arm64 go build -o GhostYgg_macos-arm64 ./builds

      - name: Upload Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: artifacts
          path: |
            ./GhostYgg_macos
            ./GhostYgg_macos-arm64

  tagged-release:
    needs: [ build, macos-build ]
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    timeout-minutes: 45

    steps:
      - name: Create Artifacts Directory
        run: mkdir -p ./artifacts

      - name: Download Artifacts
        uses: actions/download-artifact@v2
        with:
          name: artifacts
          path: ./artifacts

      - name: Publish Release
        uses: bishopfox/action-gh-release@v1
        with:
          files: |
            ./artifacts/*
